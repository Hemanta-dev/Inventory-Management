router.get('/item-list/:id', Authenticateadmin, async (req, res) => {
  try {
    if (req.role === 'superuser' || req.role === 'user') {
      const itemId = req.params.id;
      const item = await Items.findById(itemId);
      if (!item) {
        return res.status(404).json({ error: 'Item not found' });
      }
      res.status(200).json({ item });
    }
  } catch (err) {
    console.log(err);
    res.status(500).json({ error: 'Failed to retrieve item' });
  }
});


//modal
// import React, { useState, Fragment } from 'react';
// import {
//   EuiButton,
//   EuiModal,
//   EuiModalHeader,
//   EuiModalHeaderTitle,
//   EuiModalBody,
//   EuiModalFooter,
//   EuiExpression,
//   EuiFlexGroup,
//   EuiFlexItem,
//   EuiFlyout,
//   EuiFlyoutBody,
//   EuiFlyoutFooter,
//   EuiFlyoutHeader,
//   EuiForm,
//   EuiFormRow,
//   EuiPopover,
//   EuiSpacer,
//   EuiTab,
//   EuiTabs,
//   EuiText,
//   EuiTitle,
//   EuiSuperSelect,
//   useGeneratedHtmlId,
// } from '@elastic/eui';

// export const Demo = () => {
//   const [isViewModalVisible, setIsViewModalVisible] = useState(false);
//   const [view, setView] = useState(null); // Updated
//   const closeModal = () => {
   
//     setIsViewModalVisible(false);
//   };
//   const viewHandle = () => {

  
//     setIsViewModalVisible(true);
//   };

//   const printTaskDetails = () => {
//     window.print();
//   };

//   // const [isFlyoutVisible, setIsFlyoutVisible] = useState(false);
//   // const [selectedTabId, setSelectedTabId] = useState('1');
//   // const [isPopoverOpen, setIsPopoverOpen] = useState(false);
//   // const [superSelectvalue, setSuperSelectValue] = useState('option_one');
//   // const [isExpressionOpen, setIsExpressionOpen] = useState(false);
//   // const complicatedFlyoutTitleId = useGeneratedHtmlId({
//   //   prefix: 'complicatedFlyoutTitle',
//   // });

//   // const tabs = [
//   //   {
//   //     id: '1',
//   //     name: 'Tab 1',
//   //   },
//   //   {
//   //     id: '2',
//   //     name: 'Tab 2',
//   //   },
//   // ];

//   // const closeFlyout = () => setIsFlyoutVisible(false);

//   // const showFlyout = () => setIsFlyoutVisible(true);

//   // const closePopover = () => setIsPopoverOpen(false);

//   // const togglePopover = () =>
//   //   setIsPopoverOpen((isPopoverOpen) => !isPopoverOpen);

//   // const renderTabs = tabs.map((tab, index) => (
//   //   <EuiTab
//   //     onClick={() => setSelectedTabId(tab.id)}
//   //     isSelected={tab.id === selectedTabId}
//   //     key={index}
//   //   >
//   //     {tab.name}
//   //   </EuiTab>
//   // ));

//   // const superSelectOptions = [
//   //   {
//   //     value: 'option_one',
//   //     inputDisplay: 'Option one',
//   //     dropdownDisplay: (
//   //       <Fragment>
//   //         <strong>Option one</strong>
//   //         <EuiText size="s" color="subdued">
//   //           <p>Has a short description giving more detail to the option.</p>
//   //         </EuiText>
//   //       </Fragment>
//   //     ),
//   //   },
//   //   {
//   //     value: 'option_two',
//   //     inputDisplay: 'Option two',
//   //     dropdownDisplay: (
//   //       <Fragment>
//   //         <strong>Option two</strong>
//   //         <EuiText size="s" color="subdued">
//   //           <p>Has a short description giving more detail to the option.</p>
//   //         </EuiText>
//   //       </Fragment>
//   //     ),
//   //   },
//   //   {
//   //     value: 'option_three',
//   //     inputDisplay: 'Option three',
//   //     dropdownDisplay: (
//   //       <Fragment>
//   //         <strong>Option three</strong>
//   //         <EuiText size="s" color="subdued">
//   //           <p>Has a short description giving more detail to the option.</p>
//   //         </EuiText>
//   //       </Fragment>
//   //     ),
//   //   },
//   // ];

//   // const flyoutContent = (
//   //   <EuiText>
//   //     <p>
//   //       Far out in the uncharted backwaters of the unfashionable end of the
//   //       western spiral arm of the Galaxy lies a small unregarded yellow sun.
//   //     </p>

//   //     <p>
//   //       Orbiting this at a distance of roughly ninety-two million miles is an
//   //       utterly insignificant little blue green planet whose ape- descended life
//   //       forms are so amazingly primitive that they still think digital watches
//   //       are a pretty neat idea.
//   //     </p>

//   //     <ul>
//   //       <li>List item one</li>
//   //       <li>List item two</li>
//   //       <li>Dolphins</li>
//   //     </ul>

//   //     <p>
//   //       This planet has - or rather had - a problem, which was this: most of the
//   //       people living on it were unhappy for pretty much of the time. Many
//   //       solutions were suggested for this problem, but most of these were
//   //       largely concerned with the movements of small green pieces of paper,
//   //       which is odd because on the whole it was not the small green pieces of
//   //       paper that were unhappy.
//   //     </p>

//   //     <h2>This is Heading Two</h2>

//   //     <ol>
//   //       <li>Number one</li>
//   //       <li>Number two</li>
//   //       <li>Dolphins again</li>
//   //     </ol>

//   //     <p>
//   //       But the dog wasn&rsquo;t lazy, it was just practicing mindfulness, so it
//   //       had a greater sense of life-satisfaction than that fox with all its
//   //       silly jumping.
//   //     </p>

//   //     <p>
//   //       And from the fox&rsquo;s perspective, life was full of hoops to jump{' '}
//   //       <em>through</em>, low-hanging fruit to jump <em>for</em>, and dead car
//   //       batteries to jump-<em>start</em>.
//   //     </p>

//   //     <h3>This is Heading Three</h3>

//   //     <p>
//   //       So it thought the dog was making a poor life choice by focusing so much
//   //       on mindfulness. What if its car broke down?
//   //     </p>
//   //   </EuiText>
//   // );

//   return (
//     <div>
//       {/* <EuiButton onClick={showFlyout}>Show flyout</EuiButton>
//       {isFlyoutVisible.toString()}

//       <EuiModal onClose={() => { console.log("close modal")}}>
//         <EuiModalHeader>
//           <EuiModalHeaderTitle>Modal title</EuiModalHeaderTitle>
//         </EuiModalHeader>

//         <EuiModalBody>
//           This modal has the following setup:
//           <EuiSpacer />
//         </EuiModalBody>

//         <EuiModalFooter>
//           <EuiButton fill>
//             Close
//           </EuiButton>
//         </EuiModalFooter>
//       </EuiModal> */}
//    <EuiButton size='s' color='success' fill onClick={() => viewHandle()}>
//               View
//             </EuiButton>
// {isViewModalVisible && view && ( // Updated
//         <EuiModal onClose={closeModal}>
//           <EuiModalHeader>
//             <EuiModalHeaderTitle>Todo App</EuiModalHeaderTitle>
//           </EuiModalHeader>

//           <EuiModalBody>
//             <EuiForm component='form'>
//               <EuiText textAlign='center'>
//                 <p>**********************</p>
//                 <p>Task Priority: </p>
//                 <p>Task: </p>
//                 <p>**********************</p>
//               </EuiText>
//             </EuiForm>
//           </EuiModalBody>

//           <EuiModalFooter>
//             <EuiButton type='submit' fill onClick={printTaskDetails}>
//               Print
//             </EuiButton>
//           </EuiModalFooter>
//         </EuiModal>
//       )}
//     </div>
//   );
// };
import React, { useState } from 'react';
import '@elastic/eui/dist/eui_theme_light.css';
import {
  EuiButton,
  EuiModal,
  EuiModalBody,
  EuiModalFooter,
  EuiModalHeader,
  EuiModalHeaderTitle,
  EuiCodeBlock,
  EuiSpacer,
} from '@elastic/eui';
export const Demo=() => {
  const [isModalVisible, setIsModalVisible] = useState(false);
  const closeModal = () => setIsModalVisible(false);
  const showModal = () => setIsModalVisible(true);
  let modal;
  if (isModalVisible) {
    modal = (
      <EuiModal onClose={closeModal}>
        <EuiModalHeader>
          <EuiModalHeaderTitle>Modal title</EuiModalHeaderTitle>
        </EuiModalHeader>
        <EuiModalBody>
          This modal has the following setup:
          <EuiSpacer />
      
        </EuiModalBody>
        <EuiModalFooter>
          <EuiButton onClick={closeModal} fill>
            Close
          </EuiButton>
        </EuiModalFooter>
      </EuiModal>
    );
  }
  return (
    <div>
      <EuiButton onClick={showModal}>Show modal</EuiButton>
      {isModalVisible.toString()}
      {modal}
    </div>
  );
};